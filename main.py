# Install requirement first:
# pip install python-telegram-bot==20.3

from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# --- ‡§Ø‡§π‡§æ‡§Å ‡§Ö‡§™‡§®‡§æ Telegram Bot Token ‡§°‡§æ‡§≤‡•á‡§Ç ---
BOT_TOKEN = "8498725048:AAG9Fzmk5qZh-ahyvjPrS0dLAkcDOFKAgVo"

# /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = (
        "üëã ‡§®‡§Æ‡§∏‡•ç‡§§‡•á!\n\n"
        "‡§Æ‡•à‡§Ç *Cyber Security & Ethical Hacking Training Bot* ‡§π‡•Ç‡§Å‡•§\n\n"
        "üìå ‡§Ü‡§™ ‡§Ø‡§π‡§æ‡§Å ‡§∏‡•á ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:\n"
        "1. Cyber Security ‡§ï‡§æ ‡§¨‡•á‡§∏‡§ø‡§ï ‡§ú‡•ç‡§û‡§æ‡§®\n"
        "2. Ethical Hacking ‡§ï‡§æ Introduction\n"
        "3. Termux ‡§î‡§∞ Kali Linux ‡§ï‡•Ä ‡§¨‡•á‡§∏‡§ø‡§ï Training\n"
        "4. Legal Cyber Security Services\n\n"
        "üëâ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è /help ‡§≤‡§ø‡§ñ‡•á‡§Ç‡•§"
    )
    await update.message.reply_text(welcome_text, parse_mode="Markdown")

# /help command
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "üîê *Available Commands:*\n\n"
        "/start - Bot ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç\n"
        "/help - ‡§∏‡§≠‡•Ä commands ‡§¶‡•á‡§ñ‡•á‡§Ç\n"
        "/training - Cyber Security Training Topics\n"
        "/service - ‡§π‡§Æ‡§æ‡§∞‡•Ä Legal Services ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä\n"
        "/contact - ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä"
    )
    await update.message.reply_text(help_text, parse_mode="Markdown")

# /training command
async def training(update: Update, context: ContextTypes.DEFAULT_TYPE):
    training_text = (
        "üéì *Cyber Security & Ethical Hacking Training Topics:*\n\n"
        "1Ô∏è‚É£ Networking Basics\n"
        "2Ô∏è‚É£ Linux & Termux Basics\n"
        "3Ô∏è‚É£ Ethical Hacking Introduction\n"
        "4Ô∏è‚É£ Web Security Basics\n"
        "5Ô∏è‚É£ Malware Analysis (Basics)\n"
        "6Ô∏è‚É£ Penetration Testing Overview\n\n"
        "‚ö†Ô∏è *‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§Ç:* ‡§Ø‡•á ‡§∏‡§ø‡§∞‡•ç‡§´ Educational Purpose ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡•§"
    )
    await update.message.reply_text(training_text, parse_mode="Markdown")

# /service command
async def service(update: Update, context: ContextTypes.DEFAULT_TYPE):
    service_text = (
        "üíº *Legal Cyber Security Services:*\n\n"
        "‚úîÔ∏è Website Security Audit\n"
        "‚úîÔ∏è Android Security Awareness\n"
        "‚úîÔ∏è Data Privacy Guidance\n"
        "‚úîÔ∏è Penetration Testing (Legal)\n\n"
        "üëâ ‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è /contact ‡§≤‡§ø‡§ñ‡•á‡§Ç‡•§"
    )
    await update.message.reply_text(service_text, parse_mode="Markdown")

# /contact command
async def contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    contact_text = (
        "üìß *‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä:*\n\n"
        "Email: your-email@example.com\n"
        "Telegram: @YourUsername\n"
        "Website: https://yourwebsite.com\n\n"
        "‚ö° Ethical Hacking = ‡§∏‡§ø‡§∞‡•ç‡§´ Learning ‡§î‡§∞ Security Purpose"
    )
    await update.message.reply_text(contact_text, parse_mode="Markdown")


def main():
    # Application ‡§¨‡§®‡§æ‡§ì
    app = Application.builder().token(BOT_TOKEN).build()

    # Command Handlers ‡§ú‡•ã‡§°‡§º‡•ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("training", training))
    app.add_handler(CommandHandler("service", service))
    app.add_handler(CommandHandler("contact", contact))

    # Bot ‡§ö‡§≤‡§æ‡§ì
    print("‚úÖ Bot ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à...")
    app.run_polling()

if __name__ == "__main__":
    main()
